#!/usr/bin/env ruby
require 'tapjoy/ldap'

def commands(synopsis, object, sub_commands)
  Trollop::options do
    usage "#{object} [SUB_COMMAND] [options]"
    synopsis "\n#{synopsis}.\nAvailable subcommands are: #{sub_commands}"
    stop_on sub_commands
  end
end

SUB_COMMANDS = %w(user group key audit)
commands('Tool to manage LDAP resources', '', SUB_COMMANDS)

cmd = ARGV.shift # get the subcommand
case cmd
when "user"  # run commands associated with user object
  USER_SUB_COMMANDS = %w(create delete)
  commands('This object is used for user management', cmd, USER_SUB_COMMANDS)
  Tapjoy::LDAP::User.new
when 'group'
  GROUP_SUB_COMMANDS = %w(create delete add_user)
  commands('This object is used for group management', cmd, GROUP_SUB_COMMANDS)
  Tapjoy::LDAP::Group.new
when 'key'
  KEY_SUB_COMMANDS = %w(add remove install)
  commands('This object is used for group management', cmd, KEY_SUB_COMMANDS)
  Tapjoy::LDAP::Key.new
when 'audit'
  AUDIT_SUB_COMMANDS = %w(by_user by_group raw)
  commands('This object is used for auditing LDAP permissions', cmd, AUDIT_SUB_COMMANDS)
  Tapjoy::LDAP::Audit.new
else
  raise Tapjoy::LDAP::InvalidArgument
end
